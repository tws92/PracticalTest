@model PracticalTest.Models.UsersModel

@{
    ViewBag.Title = "Edit User";
}

<h2>Edit User</h2>

<div class="container">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            @Html.HiddenFor(model => model.Id)

            <div class="form-group">
                @Html.LabelFor(model => model.NRIC, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.NRIC, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NRIC, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Gender, new SelectList(new[] { "M", "F" }), "Select Gender", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Birthday, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Birthday, new { htmlAttributes = new { @class = "form-control datepicker", @id = "birthday", } })
                    @Html.ValidationMessageFor(model => model.Birthday, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.AvailableDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.AvailableDate, new { htmlAttributes = new { @class = "form-control datepicker", @id = "availabledate", } })
                    @Html.ValidationMessageFor(model => model.AvailableDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Subjects, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.ListBoxFor(model => model.Subjects, (SelectList)ViewBag.Subjects, new { @class = "form-control", @Id = "subjects", multiple = "multiple" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-primary" />
                    <a href="@Url.Action("Index", "User")" class="btn btn-secondary">Cancel</a>
                </div>
            </div>
        </div>
    }

    <script src="https://code.jquery.com/jquery-3.7.0.js"></script>
    <script>
        $(function () {
            $('#subjects').select2({
                tags: true,
                closeOnSelect: false
            });

            // Set the selected values
            var selectedValues = @Html.Raw(Json.Encode(Model.Subjects));
            $('#subjects').val(selectedValues).trigger('change');

            var birthdayValue = "@Model.Birthday.ToString("yyyy-MM-dd")";
            $("#birthday").val(birthdayValue);

            var availabledateValue = "@Model.AvailableDate.GetValueOrDefault().ToString("yyyy-MM-dd")";
            if (availabledateValue !== "0001-01-01") {
                $("#availabledate").val(availabledateValue);
            }

        });
    </script>
</div>